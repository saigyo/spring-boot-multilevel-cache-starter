import java.nio.charset.StandardCharsets

plugins {
    // IDE
    id 'idea'

    // Language
    id 'java'
    id 'java-library'

    // Core frameworks
    id 'org.springframework.boot' version '2.7.12'

    // Publishing
    id 'maven-publish'

    // Utility
    id 'jacoco'
    id 'org.sonarqube' version '3.3'
    id 'org.jetbrains.changelog' version '1.2.1'
    id 'io.freefair.lombok' version '5.3.3.3'
    id 'com.diffplug.spotless' version '5.14.2'
}

// Spring (Boot) Dependency Management
apply plugin: 'io.spring.dependency-management'

group = "$GROUP"
version = "$VERSION_NAME"
description = "$POM_DESCRIPTION"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-actuator'

    implementation 'io.micrometer:micrometer-core:1.9.11'

    implementation 'com.github.ben-manes.caffeine:caffeine:2.9.3'
    implementation 'io.github.resilience4j:resilience4j-circuitbreaker:1.7.1'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter:1.18.3'
    testImplementation 'org.awaitility:awaitility:4.2.0'
}

test {
    useJUnitPlatform()
}

// Swap build tasks to build library only
bootJar {
    enabled = false
}

jar {
    enabled = true
    archiveClassifier.set('')
}

// Enable Spotless code formatting rules
spotless {
    java {
        googleJavaFormat(JavaVersion.VERSION_1_7.toString())
    }

    lineEndings = 'UNIX'
}

// Setup changelog plugin
changelog {
    version = project.version.toString()
}

// Setup JaCoCo plugin
jacoco {
    toolVersion = "0.8.8"
}
jacocoTestReport {
    reports {
        xml.enabled(true)
    }
}

// Setup SonarCloud
sonarqube {
    properties {
        property 'sonar.projectKey', 'SuppieRK_spring-boot-multilevel-cache-starter'
        property 'sonar.organization', 'suppierk'
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/**/jacocoTestReport.xml'
    }
}

// Configure several tasks additionally for Gradle
tasks.withType(Copy).configureEach {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = StandardCharsets.UTF_8.name()
    dependsOn(spotlessJavaCheck)
}

// Configuring publication
allprojects {
    plugins.withId("com.vanniktech.maven.publish") {
        mavenPublish {
            sonatypeHost = "S01"
        }
    }
}

publishing {
    repositories {
        maven {
            name 'github-saigyo'
            url 'https://maven.pkg.github.com/saigyo/spring-boot-multilevel-cache-starter'
            credentials(HttpHeaderCredentials) {
                name = 'Authorization'
                value = 'Bearer ' + System.getenv('GITHUB_PUBLISH_PACKAGES_TOKEN')
            }
            authentication {
                register('header', HttpHeaderAuthentication)
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = 'spring-boot-multilevel-cache-starter'
            version = project.version

            from components.java
        }
    }
}
